# Copyright (c) 2017, 2022 Oracle Corporation and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl

# Identity and access parameters
api_fingerprint      = "f9:9d:02:05:81:07:39:48:40:b7:2b:f7:92:4b:66:57"
api_private_key_path = "~/.oci/ali_private.pem"

home_region = "eu-marseille-1"
region      = "eu-marseille-1"
tenancy_id  = "ocid1.tenancy.oc1..aaaaaaaaiknfacmymcxj7xityeooj5b5pqmbshuslca5oecnkoq2zsjwzoxa"
user_id     = "ocid1.user.oc1..aaaaaaaamleevtj3vskewzr6axqlys5oce6crig6cwuai3mywqypmj3oml4q"

# general oci parameters
compartment_id = "ocid1.compartment.oc1..aaaaaaaa2xtghd66g7sxoyhrutuo6ldfokba72s6kulbaa63y7nw7dxraaaa"
timezone       = "Europe/Madrid"

# ssh keys
# ssh_private_key_path = "~/.ssh/id_ed25519"
# ssh_public_key_path  = "~/.ssh/id_ed25519.pub"
ssh_private_key_path = "/Users/julsilve/.ssh/id_rsa"
ssh_public_key_path  = "/Users/julsilve/.ssh/id_rsa.pub"

# networking
create_vcn               = true
assign_dns               = true
local_peering_gateways   = {}
lockdown_default_seclist = true
vcn_cidrs                = ["10.0.0.0/16"]
vcn_dns_label            = "julien"
vcn_name                 = "julien"

# Subnets
subnets = {
  bastion  = { newbits = 13, netnum = 0, dns_label = "bastion" }
  operator = { newbits = 13, netnum = 1, dns_label = "operator" }
  cp       = { newbits = 13, netnum = 2, dns_label = "cp" }
  int_lb   = { newbits = 11, netnum = 16, dns_label = "ilb" }
  pub_lb   = { newbits = 11, netnum = 17, dns_label = "plb" }
  workers  = { newbits = 2, netnum = 1, dns_label = "workers" }
  pods     = { newbits = 2, netnum = 2, dns_label = "pods" }
}

# Dynamic routing gateway (DRG)
create_drg       = false # true/*false
drg_display_name = "drg"
drg_id           = null
remote_peering_connections = {}

# Routing
# ig_route_table_id = null # Optional ID of existing internet gateway route table

internet_gateway_route_rules = []
nat_gateway_public_ip_id = "none"

nat_gateway_route_rules = []

# bastion
create_bastion           = false
bastion_allowed_cidrs    = ["0.0.0.0/0"]
bastion_image_os         = "Oracle Autonomous Linux"
bastion_image_os_version = "8"
bastion_image_type       = "platform"
# bastion_image_id         = "ocid1.image.oc1.ap-sydney-1.aaaaaaaajioht5hlosejht7c45e7pnjhjonkmznv5zjg7dycsztxd5ivzxna"
bastion_is_public        = true
bastion_nsg_ids          = []
bastion_upgrade          = false
bastion_user             = "opc"

bastion_shape = {
  shape            = "VM.Standard.E4.Flex",
  ocpus            = 1,
  memory           = 4,
  boot_volume_size = 50
}

# operator
create_operator                = false
operator_cloud_init            = []
operator_image_os              = "Oracle Linux"
operator_image_os_version      = "9"
operator_image_type            = "platform"
operator_install_k9s           = true
operator_install_istioctl      = true
operator_nsg_ids               = []
operator_pv_transit_encryption = false
operator_upgrade               = false
operator_user                  = "opc"

operator_shape = {
  shape            = "VM.Standard.E4.Flex",
  ocpus            = 1,
  memory           = 4,
  boot_volume_size = 50
}

# iam
create_iam_autoscaler_policy = "auto"   // never/*auto/always
create_iam_kms_policy        = "auto"   // never/*auto/always
create_iam_operator_policy   = "always" // never/*auto/always
create_iam_resources         = true
create_iam_worker_policy     = "auto" // never/*auto/always

create_iam_tag_namespace = false // true/*false
create_iam_defined_tags  = false // true/*false
tag_namespace            = "oke"
use_defined_tags         = false // true/*false

# cluster
create_cluster     = true
cluster_name       = "julien"
cni_type           = "flannel"
kubernetes_version = "v1.29.1"
pods_cidr          = "10.244.0.0/16"
services_cidr      = "10.96.0.0/16"

# Worker pool defaults
worker_pool_size = 1
worker_pool_mode = "node-pool" # Must be node-pool

# Worker defaults
await_node_readiness     = "none"
worker_block_volume_type = "paravirtualized"
worker_cloud_init = [
  {
    content      = <<-EOT
    runcmd:
    - 'echo "Kernel module configuration for Istio and worker node initialization"'
    - 'modprobe br_netfilter'
    - 'modprobe nf_nat'
    - 'modprobe xt_REDIRECT'
    - 'modprobe xt_owner'
    - 'modprobe iptable_nat'
    - 'modprobe iptable_mangle'
    - 'modprobe iptable_filter'
    - '/usr/libexec/oci-growfs -y'
    - 'timedatectl set-timezone Europe/Madrid'
    - 'curl --fail -H "Authorization: Bearer Oracle" -L0 http://169.254.169.254/opc/v2/instance/metadata/oke_init_script | base64 --decode >/var/run/oke-init.sh'
    - 'bash -x /var/run/oke-init.sh'
    EOT
    content_type = "text/cloud-config",
  }
]
worker_disable_default_cloud_init = true
worker_image_os                   = "Oracle Linux"
worker_image_os_version           = "8"
worker_image_type                 = "oke"
worker_is_public                  = false
worker_node_labels                = {}
worker_nsg_ids                    = []
worker_pv_transit_encryption      = false

worker_shape = {
  shape            = "VM.Standard.E4.Flex",
  ocpus            = 2,  # Ignored for non-Flex shapes
  memory           = 16, # Ignored for non-Flex shapes
  boot_volume_size = 50
}

# autoscaler
cluster_autoscaler_install           = false
cluster_autoscaler_namespace         = "kube-system"
cluster_autoscaler_helm_version      = "9.24.0"
cluster_autoscaler_helm_values       = {}
cluster_autoscaler_helm_values_files = []

worker_pools = {
  np1 = {
    shape              = "VM.Standard.E4.Flex",
    ocpus              = 2,
    memory             = 32,
    size               = 2  ,
    boot_volume_size   = 50,
    kubernetes_version = "v1.29.1"
  }
}

# Security
allow_node_port_access       = false
allow_pod_internet_access    = true
allow_worker_internet_access = true
allow_worker_ssh_access      = true
assign_public_ip_to_control_plane = true
control_plane_allowed_cidrs  = ["0.0.0.0/0"]
control_plane_is_public      = true
control_plane_nsg_ids        = []
enable_waf                   = false
load_balancers               = "both"
preferred_load_balancer      = "public"

# See https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
# Protocols: All = "all"; ICMP = 1; TCP  = 6; UDP  = 17
# Source/destination type: NSG ID: "NETWORK_SECURITY_GROUP"; CIDR range: "CIDR_BLOCK"
allow_rules_internal_lb = {
  # "Allow TCP ingress to internal load balancers for port 8080 from VCN" : {
  #   protocol = 6, port = 8080, source = "10.0.0.0/16", source_type = "CIDR_BLOCK",
  # },
}

allow_rules_public_lb = {
  # "Allow TCP ingress to public load balancers for SSL traffic from anywhere" : {
  #   protocol = 6, port = 443, source = "0.0.0.0/0", source_type = "CIDR_BLOCK",
  # },
}

# cilium 
cilium_install           = false
cilium_reapply           = false
cilium_namespace         = "network"
cilium_helm_version      = "1.14.4"
cilium_helm_values       = {}
cilium_helm_values_files = []